[{"/Users/blerque/wagmi-example/src/pages/_app.tsx":"1","/Users/blerque/wagmi-example/src/pages/index.tsx":"2","/Users/blerque/wagmi-example/src/components/Account.tsx":"3","/Users/blerque/wagmi-example/src/components/Connect.tsx":"4","/Users/blerque/wagmi-example/src/components/NetworkSwitcher.tsx":"5","/Users/blerque/wagmi-example/src/components/index.ts":"6"},{"size":2243,"mtime":1649716655458,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1649716655458,"results":"9","hashOfConfig":"8"},{"size":701,"mtime":1649716655454,"results":"10","hashOfConfig":"8"},{"size":822,"mtime":1649716655455,"results":"11","hashOfConfig":"8"},{"size":721,"mtime":1649716655456,"results":"12","hashOfConfig":"8"},{"size":124,"mtime":1649716655456,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"14zl1au",{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/blerque/wagmi-example/src/pages/_app.tsx",[],"/Users/blerque/wagmi-example/src/pages/index.tsx",[],"/Users/blerque/wagmi-example/src/components/Account.tsx",["27","28"],"import * as React from 'react'\nimport { useAccount } from 'wagmi'\n\nexport const Account = () => {\n  const [{ data: accountData }, disconnect] = useAccount({\n    fetchEns: true,\n  })\n\n  if (!accountData) return <div>No account connected</div>\n\n  return (\n    <div>\n      <div>\n        <button onClick={() => disconnect()}>\n          Disconnect from {accountData?.connector?.name}\n        </button>\n      </div>\n\n      <div>\n        {accountData?.ens?.name ?? accountData?.address}\n        {accountData?.ens ? ` (${accountData?.address})` : null}\n      </div>\n\n      {accountData?.ens?.avatar && (\n        <img src={accountData.ens.avatar} style={{ height: 40, width: 40 }} />\n      )}\n    </div>\n  )\n}\n","/Users/blerque/wagmi-example/src/components/Connect.tsx",[],"/Users/blerque/wagmi-example/src/components/NetworkSwitcher.tsx",[],"/Users/blerque/wagmi-example/src/components/index.ts",[],{"ruleId":"29","severity":1,"message":"30","line":25,"column":9,"nodeType":"31","endLine":25,"endColumn":79},{"ruleId":"32","severity":1,"message":"33","line":25,"column":9,"nodeType":"31","endLine":25,"endColumn":79},"@next/next/no-img-element","Do not use <img>. Use Image from 'next/image' instead. See https://nextjs.org/docs/messages/no-img-element.","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images."]